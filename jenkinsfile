node {
	try  {
	notify('Job Started') 

     
	stage('Git-Checkout') {
	git 'https://github.com/vibhavanya/microservice2.git'
	}
    
	def project_path="Code/petclinic"
 
	dir(project_path) {
    
    stage('Sonar Analysis'){
        withSonarQubeEnv('SonarQube'){
        sh 'mvn sonar:sonar'
        }
   }
   stage('Quality Gate'){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }
	stage('Maven-Clean') {
		sh label: '', script: 'mvn clean'
	}
    
	stage('Maven-Compile') {
		sh label: '', script: 'mvn compile'
	}
   
   
  
   stage('Maven-Test') {
		sh label: '', script: 'mvn test'
	}
  
   stage('Maven-Package') {
		sh label: '', script: 'mvn package'
	}
  
   stage('Archive-Artifacts') {
		archiveArtifacts 'target/*.war'
  }
  
    stage('Jfrog Artifacory Upload') {
        def server= Artifactory.server 'Artifactory'
                    def uploadSpec= """{
                        "files": [{
                        "pattern": "/root/.jenkins/workspace/capstone-microservice2_master/Code/petclinic/target/*.war",
                        "target": "vibha1"}]
                    }"""
        server.upload(uploadSpec)
    		}  
	}

	notify('Job Completed')   
	} catch (err) {
		notify("Error ${err}")
		currentBuild.result = 'FAILURE'
		}
	}

	def notify(status){
   	 emailext (
	to: "vibha.vanya@gmail.com",
	subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
	 body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
	<p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
		)
	}
